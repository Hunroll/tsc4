{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

() recv_internal() {
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id {
  tuple res = empty_tuple();
  if ((n == 0) & (k > 0))
  {
    res~tpush(0);
    n = 1;
    k -= 1;
  }
  if (k == 0)
  {
    return res;
  }

  int a = 0;
  int b = 1;
  if (n > 299)
  {
    a = 137347080577163115432025771710279131845700275212767467264610201;
    b = 222232244629420445529739893461909967206666939096499764990979600;
    n -= 299;
  } 
  else 
  {
    if (n > 199)
    {
      a = 173402521172797813159685037284371942044301;
      b = 280571172992510140037611932413038677189525;
      n -= 199;
    }
    else
    {
      if (n > 149)
      {
        a = 6161314747715278029583501626149;
        b = 9969216677189303386214405760200;
        n -= 149;
      }
      else
      {
        if (n > 99)
        {
          a = 218922995834555169026;
          b = 354224848179261915075;
          n -= 99;
        }
        else
        {
          if (n > 49)
          {
            a = 7778742049;
            b = 12586269025;
            n -= 49;
          }
        }
      }
    }
  }
  
  repeat (n - 1)
  {
    (a, b) = (b, a + b);
   ;; ~dump(b);
  }
  ;; ~dump(0);
  repeat (k)
  {
    ;; ~dump(b);
    res~tpush(b);
    ;; ~dump(b);
    (a, b) = (b, a + b % 94611056096305838013295371573764256526437182762229865607320618320601813254535 );
    ;; ~dump(b);
  }
  ;; ~dump(res);
  return res;
}

